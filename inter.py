# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from collections import Counter
import matplotlib.pyplot as plt
import nltk
import codecs
import easygui
import tkinter
import tkinter.messagebox
import re
import random
import docx
import os
import string
import math
import spacy
import pytextrank
import traceback
import unittest
import warnings
from rutermextract import TermExtractor

 

class Ui_MainWindow(object):

    def zagruzka(self):

        doc= docx.Document(easygui.fileopenbox(filetypes=["*.docx"]))
        text = []
        for paragraph in doc.paragraphs:
            text.append(paragraph.text)
        poisk=' '.join(text)
        self.textEdit.setText(poisk)

    def Analiz2(self):
        textkluch = self.textEdit.toPlainText()
        textkluchsplit = textkluch.split()
        punctuation=re.sub(r'[^A-Za-z0-9а-яА-Я]+',' ',str(textkluchsplit))
        punctuation2=re.sub(r'\b\w{1,3}\b', ' ', punctuation) 
        c = list(punctuation2.lower().split())

        ss = codecs.open('C:/Users/petuh/Desktop/adasd/Стоп-слова.txt', 'r', 'utf8')
        Text1 = ss.read()
        ss.close()
        splitslov1 = Text1.split()
        listslov1 = list(splitslov1)
        cc = []
        slova = []
        slova1 = []

        for i in c:    
            if not i in listslov1:  
                cc.append(i)   

        myString = ' '.join(cc)
        spisoksplit = myString

        term_extractor = TermExtractor()
        for term in term_extractor(spisoksplit):
            if term.count>4:
                slova.append(term.normalized)



        # for gdfhdfgjoxhb in slova:
        #     fff = str(gdfhdfgjoxhb)
        #     a = fff.replace(" ", "_") 
        #     slova1.append(a)

        print (slova)

        schet=-1
        spisok=[]
        spisokproc=[]
        i=0

        dir = 'C:/Users/petuh/Desktop/adasd/textsssss'
        papki = os.listdir(dir)       
        kolvo=len(spisoksplit)
        dfg =[]

        for papka in papki:
            schet+=1 
            schet2=0
            kolvopapki=0
            dir2 = 'C:/Users/petuh/Desktop/adasd/textsssss'+'/{}'.format(papki[schet])
            papki2 = os.listdir(dir2)
            kolvopapkishet = len(papki2)


            for papka2 in papki2:
                if kolvopapki<kolvopapkishet:
                    sovpalo=0
                    os.chdir('C:/Users/petuh/Desktop/adasd/textsssss'+'/{}'.format(papki[schet])+'/{}'.format(papki2[schet2]))
                    f = codecs.open('C:/Users/petuh/Desktop/adasd/textsssss'+'/{}'.format(papki[schet])+'/{}'.format(papki2[schet2])+'/text.txt', 'r', 'utf8')
                    Text=f.read()
                    f.close()
                    splitslov = Text.split()
                    listslov = list(splitslov)

                    for elementspisok in slova:
                        fff = len(str(elementspisok).split())
                        tt = 0
                        yy = fff
                        print ("elementspisok     " + str(elementspisok))

                        for elementext in listslov:
                            elementext2 = listslov[tt:yy]
                            fgdfgh = " ".join(elementext2)
                            tt += fff
                            yy += fff
                            print ("fgdfgh     " + str(fgdfgh))


                            if fgdfgh == elementspisok:
                                sovpalo+=1
                            print (sovpalo)

                               
                    
                    if sovpalo>2:
                        spisok.append('Коференция: '+papki[schet]+' '+'Направление: '+papki2[schet2])
                    
                    schet2+=1 
                    kolvopapki+=1
                else:
                    schet+=1 
                    schet2=0
  


        spisok1=list(set(spisok))
        spisokfinale='\n'.join(spisok1)

        self.textBrowser.setText(spisokfinale)




    def Analiz(self):
        textkluch = self.textEdit.toPlainText()
        textkluchsplit = textkluch.split()
        punctuation=re.sub(r'[^A-Za-z0-9а-яА-Я]+',' ',str(textkluchsplit))
        punctuation2=re.sub(r'\b\w{1,3}\b', ' ', punctuation) 
        c = list(punctuation2.lower().split())

        ss = codecs.open('C:/Users/petuh/Desktop/adasd/Стоп-слова.txt', 'r', 'utf8')
        Text1 = ss.read()
        ss.close()
        splitslov1 = Text1.split()
        listslov1 = list(splitslov1)
        cc = []

        for i in c:    
            if not i in listslov1:  
                cc.append(i)   

        spisoksplit = cc


        schet=-1
        spisok=[]
        spisokproc=[]
        i=0
        chislotext = 0
        chislosoder = 0

        dir = 'C:/Users/petuh/Desktop/adasd/textsssss'
        papki = os.listdir(dir)       
        kolvo=len(spisoksplit)


        for papka in papki:
            schet+=1 
            schet2=0
            kolvopapki=0
            dir2 = 'C:/Users/petuh/Desktop/adasd/textsssss'+'/{}'.format(papki[schet])
            papki2 = os.listdir(dir2)
            kolvopapkishet = len(papki2)

            for papka2 in papki2:
                if kolvopapki<kolvopapkishet:
                    sovpalo=0
                    os.chdir('C:/Users/petuh/Desktop/adasd/textsssss'+'/{}'.format(papki[schet])+'/{}'.format(papki2[schet2]))
                    f = codecs.open('C:/Users/petuh/Desktop/adasd/textsssss'+'/{}'.format(papki[schet])+'/{}'.format(papki2[schet2])+'/text.txt', 'r', 'utf8')
                    Text=f.read()
                    f.close()
                    splitslov = Text.split()
                    listslov = list(splitslov)

                    for elementext in listslov:
                        for elementspisok in spisoksplit:
                            if re.findall(r"{}+\w".format(elementext),elementspisok):
                                sovpalo+=1
                                print (kolvo, sovpalo, os.getcwd(), kolvopapki)
                    
                    if sovpalo>0:
                        chislosoder +=1

                    schet2+=1 
                    kolvopapki+=1
                    chislotext+=1


                else:
                    schet+=1 
                    schet2=0

        schet=-1
        spisok=[]
        spisokproc=[]
        i=0

        dir = 'C:/Users/petuh/Desktop/adasd/textsssss'
        papki = os.listdir(dir)       
        kolvo=len(spisoksplit)

        for papka in papki:
            schet+=1 
            schet2=0
            kolvopapki=0
            dir2 = 'C:/Users/petuh/Desktop/adasd/textsssss'+'/{}'.format(papki[schet])
            papki2 = os.listdir(dir2)
            kolvopapkishet = len(papki2)

            print ("kolvopapkishet1 ", kolvopapkishet)
            print ("schet22 ", schet2)
            print ("schet11 ", schet) 
            print (chislosoder)
            print (chislotext)

            for papka2 in papki2:
                if kolvopapki<kolvopapkishet:
                    sovpalo=0
                    os.chdir('C:/Users/petuh/Desktop/adasd/textsssss'+'/{}'.format(papki[schet])+'/{}'.format(papki2[schet2]))
                    f = codecs.open('C:/Users/petuh/Desktop/adasd/textsssss'+'/{}'.format(papki[schet])+'/{}'.format(papki2[schet2])+'/text.txt', 'r', 'utf8')
                    Text=f.read()
                    f.close()
                    splitslov = Text.split()
                    listslov = list(splitslov)

                    for elementext in listslov:
                        for elementspisok in spisoksplit:
                            if re.findall(r"{}+\w".format(elementext),elementspisok):
                                sovpalo+=1
                                print (kolvo, sovpalo, os.getcwd(), kolvopapki)

                    TF= sovpalo/kolvo
                    IDF = math.log10(chislotext/chislosoder)
                    M = TF * IDF
                    
                    if sovpalo>0:
                        spisok.append('Коференция: '+papki[schet]+' '+'Направление: '+papki2[schet2]+' Процент совпадения: '+str(M))
                    
                    schet2+=1 
                    kolvopapki+=1

                    
                    print (M)
                    print (schet2)
                    print (kolvopapki)

                else:
                    schet+=1 
                    schet2=0

                    print ("schet2 ", schet2)
                    print ("schet ", schet) 
                    print ("kolvopapkishet2 ", kolvopapkishet)  



        spisok1=list(set(spisok))
        spisokfinale='\n'.join(spisok1)
        print (chislosoder)

        self.textBrowser.setText(spisokfinale)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1709, 1209)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 10, 1701, 1171))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.label = QtWidgets.QLabel(self.tab)
        self.label.setGeometry(QtCore.QRect(30, 20, 47, 13))
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.tab)
        self.lineEdit.setGeometry(QtCore.QRect(30, 40, 341, 21))
        self.lineEdit.setObjectName("lineEdit")
        self.checkBox = QtWidgets.QCheckBox(self.tab)
        self.checkBox.setGeometry(QtCore.QRect(390, 40, 131, 21))
        self.checkBox.setObjectName("checkBox")
        self.listView = QtWidgets.QListView(self.tab)
        self.listView.setGeometry(QtCore.QRect(30, 80, 1041, 1041))
        self.listView.setObjectName("listView")
        self.pushButton = QtWidgets.QPushButton(self.tab)
        self.pushButton.setGeometry(QtCore.QRect(1110, 80, 211, 41))
        self.pushButton.setObjectName("pushButton")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.textEdit = QtWidgets.QTextEdit(self.tab_2)
        self.textEdit.setGeometry(QtCore.QRect(150, 80, 1131, 181))
        self.textEdit.setObjectName("textEdit")
        self.pushButton_2 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_2.setGeometry(QtCore.QRect(550, 20, 301, 51))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.zagruzka)

        self.pushButton_4 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_4.setGeometry(QtCore.QRect(150, 310, 81, 51))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_4.clicked.connect(self.Analiz)

        self.pushButton_5 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_5.setGeometry(QtCore.QRect(390, 310, 81, 51))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_6.setGeometry(QtCore.QRect(270, 310, 81, 51))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_6.clicked.connect(self.Analiz2)

        self.label_27 = QtWidgets.QLabel(self.tab_2)
        self.label_27.setGeometry(QtCore.QRect(150, 290, 91, 16))
        self.label_27.setObjectName("label_27")
        self.textBrowser = QtWidgets.QTextBrowser(self.tab_2)
        self.textBrowser.setGeometry(QtCore.QRect(150, 430, 1131, 561))
        self.textBrowser.setObjectName("textBrowser")
        self.label_28 = QtWidgets.QLabel(self.tab_2)
        self.label_28.setGeometry(QtCore.QRect(150, 410, 81, 16))
        self.label_28.setObjectName("label_28")
        self.label_30 = QtWidgets.QLabel(self.tab_2)
        self.label_30.setGeometry(QtCore.QRect(150, 60, 251, 16))
        self.label_30.setObjectName("label_30")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.textEdit_2 = QtWidgets.QTextEdit(self.tab_3)
        self.textEdit_2.setGeometry(QtCore.QRect(150, 80, 1131, 181))
        self.textEdit_2.setObjectName("textEdit_2")
        self.label_29 = QtWidgets.QLabel(self.tab_3)
        self.label_29.setGeometry(QtCore.QRect(150, 60, 251, 16))
        self.label_29.setObjectName("label_29")
        self.pushButton_7 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_7.setGeometry(QtCore.QRect(550, 20, 301, 51))
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_7.clicked.connect(self.zagruzka)

        self.listView_2 = QtWidgets.QListView(self.tab_3)
        self.listView_2.setGeometry(QtCore.QRect(150, 380, 1131, 681))
        self.listView_2.setObjectName("listView_2")
        self.label_2 = QtWidgets.QLabel(self.tab_3)
        self.label_2.setGeometry(QtCore.QRect(150, 360, 111, 16))
        self.label_2.setObjectName("label_2")
        self.pushButton_8 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_8.setGeometry(QtCore.QRect(1320, 380, 261, 51))
        self.pushButton_8.setObjectName("pushButton_8")
        self.pushButton_10 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_10.setGeometry(QtCore.QRect(550, 300, 301, 51))
        self.pushButton_10.setObjectName("pushButton_10")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.textEdit_3 = QtWidgets.QTextEdit(self.tab_4)
        self.textEdit_3.setGeometry(QtCore.QRect(140, 100, 1131, 131))
        self.textEdit_3.setObjectName("textEdit_3")
        self.label_31 = QtWidgets.QLabel(self.tab_4)
        self.label_31.setGeometry(QtCore.QRect(140, 20, 121, 16))
        self.label_31.setObjectName("label_31")
        self.listView_3 = QtWidgets.QListView(self.tab_4)
        self.listView_3.setGeometry(QtCore.QRect(140, 360, 1131, 701))
        self.listView_3.setObjectName("listView_3")
        self.label_32 = QtWidgets.QLabel(self.tab_4)
        self.label_32.setGeometry(QtCore.QRect(140, 340, 131, 16))
        self.label_32.setObjectName("label_32")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_2.setGeometry(QtCore.QRect(140, 40, 311, 20))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_33 = QtWidgets.QLabel(self.tab_4)
        self.label_33.setGeometry(QtCore.QRect(540, 20, 171, 16))
        self.label_33.setObjectName("label_33")
        self.label_34 = QtWidgets.QLabel(self.tab_4)
        self.label_34.setGeometry(QtCore.QRect(950, 20, 121, 16))
        self.label_34.setObjectName("label_34")
        self.label_35 = QtWidgets.QLabel(self.tab_4)
        self.label_35.setGeometry(QtCore.QRect(140, 80, 131, 16))
        self.label_35.setObjectName("label_35")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_3.setGeometry(QtCore.QRect(540, 40, 321, 20))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_4.setGeometry(QtCore.QRect(950, 40, 321, 20))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.pushButton_12 = QtWidgets.QPushButton(self.tab_4)
        self.pushButton_12.setGeometry(QtCore.QRect(540, 290, 301, 51))
        self.pushButton_12.setObjectName("pushButton_12")
        self.pushButton_13 = QtWidgets.QPushButton(self.tab_4)
        self.pushButton_13.setGeometry(QtCore.QRect(1310, 360, 261, 51))
        self.pushButton_13.setObjectName("pushButton_13")
        self.tabWidget.addTab(self.tab_4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.groupBox = QtWidgets.QGroupBox(self.tab_5)
        self.groupBox.setGeometry(QtCore.QRect(70, 50, 771, 131))
        self.groupBox.setObjectName("groupBox")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(150, 30, 81, 16))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        self.label_4.setGeometry(QtCore.QRect(210, 50, 21, 16))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setGeometry(QtCore.QRect(200, 70, 31, 16))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        self.label_6.setGeometry(QtCore.QRect(20, 90, 221, 16))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.groupBox)
        self.label_7.setGeometry(QtCore.QRect(250, 30, 61, 16))
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.groupBox)
        self.label_8.setGeometry(QtCore.QRect(250, 50, 47, 13))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.groupBox)
        self.label_9.setGeometry(QtCore.QRect(250, 70, 141, 16))
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.groupBox)
        self.label_10.setGeometry(QtCore.QRect(250, 90, 91, 16))
        self.label_10.setObjectName("label_10")
        self.groupBox_2 = QtWidgets.QGroupBox(self.tab_5)
        self.groupBox_2.setGeometry(QtCore.QRect(70, 210, 771, 171))
        self.groupBox_2.setObjectName("groupBox_2")
        self.label_11 = QtWidgets.QLabel(self.groupBox_2)
        self.label_11.setGeometry(QtCore.QRect(60, 30, 71, 16))
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.groupBox_2)
        self.label_12.setGeometry(QtCore.QRect(50, 60, 81, 16))
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(self.groupBox_2)
        self.label_13.setGeometry(QtCore.QRect(280, 30, 91, 16))
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.groupBox_2)
        self.label_14.setGeometry(QtCore.QRect(290, 60, 81, 16))
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.groupBox_2)
        self.label_15.setGeometry(QtCore.QRect(20, 90, 111, 16))
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.groupBox_2)
        self.label_16.setGeometry(QtCore.QRect(150, 30, 71, 16))
        self.label_16.setObjectName("label_16")
        self.label_17 = QtWidgets.QLabel(self.groupBox_2)
        self.label_17.setGeometry(QtCore.QRect(150, 60, 71, 16))
        self.label_17.setObjectName("label_17")
        self.label_18 = QtWidgets.QLabel(self.groupBox_2)
        self.label_18.setGeometry(QtCore.QRect(420, 30, 71, 16))
        self.label_18.setObjectName("label_18")
        self.label_19 = QtWidgets.QLabel(self.groupBox_2)
        self.label_19.setGeometry(QtCore.QRect(420, 60, 71, 16))
        self.label_19.setObjectName("label_19")
        self.label_20 = QtWidgets.QLabel(self.groupBox_2)
        self.label_20.setGeometry(QtCore.QRect(150, 90, 71, 16))
        self.label_20.setObjectName("label_20")
        self.groupBox_3 = QtWidgets.QGroupBox(self.tab_5)
        self.groupBox_3.setGeometry(QtCore.QRect(70, 410, 371, 141))
        self.groupBox_3.setObjectName("groupBox_3")
        self.label_21 = QtWidgets.QLabel(self.groupBox_3)
        self.label_21.setGeometry(QtCore.QRect(20, 40, 121, 16))
        self.label_21.setObjectName("label_21")
        self.label_22 = QtWidgets.QLabel(self.groupBox_3)
        self.label_22.setGeometry(QtCore.QRect(20, 70, 61, 16))
        self.label_22.setObjectName("label_22")
        self.label_23 = QtWidgets.QLabel(self.groupBox_3)
        self.label_23.setGeometry(QtCore.QRect(20, 100, 91, 16))
        self.label_23.setObjectName("label_23")
        self.label_24 = QtWidgets.QLabel(self.groupBox_3)
        self.label_24.setGeometry(QtCore.QRect(160, 70, 71, 16))
        self.label_24.setObjectName("label_24")
        self.label_25 = QtWidgets.QLabel(self.groupBox_3)
        self.label_25.setGeometry(QtCore.QRect(160, 40, 71, 16))
        self.label_25.setObjectName("label_25")
        self.label_26 = QtWidgets.QLabel(self.groupBox_3)
        self.label_26.setGeometry(QtCore.QRect(160, 100, 71, 16))
        self.label_26.setObjectName("label_26")
        self.pushButton_3 = QtWidgets.QPushButton(self.tab_5)
        self.pushButton_3.setGeometry(QtCore.QRect(380, 580, 211, 51))
        self.pushButton_3.setObjectName("pushButton_3")
        self.tabWidget.addTab(self.tab_5, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1709, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(2)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Поиск"))
        self.checkBox.setText(_translate("MainWindow", "расширенный поиск"))
        self.pushButton.setText(_translate("MainWindow", "Подать заявку"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Конференции"))
        self.pushButton_2.setText(_translate("MainWindow", "Открыть статью"))
        self.pushButton_4.setText(_translate("MainWindow", "1"))
        self.pushButton_5.setText(_translate("MainWindow", "3"))
        self.pushButton_6.setText(_translate("MainWindow", "2"))
        self.label_27.setText(_translate("MainWindow", "Способ анализа"))
        self.label_28.setText(_translate("MainWindow", "Рекомендация"))
        self.label_30.setText(_translate("MainWindow", "Введите ключевые слова или откройте статью"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Рекомендация по конференции"))
        self.label_29.setText(_translate("MainWindow", "Введите ключевые слова или откройте статью"))
        self.pushButton_7.setText(_translate("MainWindow", "Открыть статью"))
        self.label_2.setText(_translate("MainWindow", "Аналогичные статьи"))
        self.pushButton_8.setText(_translate("MainWindow", "Скачать статью"))
        self.pushButton_10.setText(_translate("MainWindow", "Поиск"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Поиск аналогичных статей"))
        self.label_31.setText(_translate("MainWindow", "Введите образование"))
        self.label_32.setText(_translate("MainWindow", "Рекомендованные люди"))
        self.label_33.setText(_translate("MainWindow", "Введите название предприятия    "))
        self.label_34.setText(_translate("MainWindow", "Введите должность"))
        self.label_35.setText(_translate("MainWindow", "Другие ключевые слова"))
        self.pushButton_12.setText(_translate("MainWindow", "Поиск"))
        self.pushButton_13.setText(_translate("MainWindow", "Открыть профиль"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "Поиск людей"))
        self.groupBox.setTitle(_translate("MainWindow", "Петухов Даниил Алексеевич"))
        self.label_3.setText(_translate("MainWindow", "Дата рождения"))
        self.label_4.setText(_translate("MainWindow", "Пол"))
        self.label_5.setText(_translate("MainWindow", "E-mail    E-mail    "))
        self.label_6.setText(_translate("MainWindow", "Мобильный телефон для смс-оповещения"))
        self.label_7.setText(_translate("MainWindow", "20.12.1999"))
        self.label_8.setText(_translate("MainWindow", "Мужской"))
        self.label_9.setText(_translate("MainWindow", "petuhov.dania1@yandex.ru"))
        self.label_10.setText(_translate("MainWindow", "89538116256"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Область научных интересов и научные достижения"))
        self.label_11.setText(_translate("MainWindow", "Образование"))
        self.label_12.setText(_translate("MainWindow", "Область знания    "))
        self.label_13.setText(_translate("MainWindow", "Ученая степень    l"))
        self.label_14.setText(_translate("MainWindow", "Ученое звание"))
        self.label_15.setText(_translate("MainWindow", "Научные достижения"))
        self.label_16.setText(_translate("MainWindow", "не заполнено"))
        self.label_17.setText(_translate("MainWindow", "не заполнено"))
        self.label_18.setText(_translate("MainWindow", "не заполнено"))
        self.label_19.setText(_translate("MainWindow", "не заполнено"))
        self.label_20.setText(_translate("MainWindow", "не заполнено"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Место работы"))
        self.label_21.setText(_translate("MainWindow", "Название предприятия    "))
        self.label_22.setText(_translate("MainWindow", "Должность"))
        self.label_23.setText(_translate("MainWindow", "Рабочий телефон    "))
        self.label_24.setText(_translate("MainWindow", "не заполнено"))
        self.label_25.setText(_translate("MainWindow", "не заполнено"))
        self.label_26.setText(_translate("MainWindow", "не заполнено"))
        self.pushButton_3.setText(_translate("MainWindow", "Изменить"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_5), _translate("MainWindow", "Анкетные данные"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
