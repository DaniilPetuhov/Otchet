# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '1.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from collections import Counter
import matplotlib.pyplot as plt
import nltk
import codecs
import easygui
import tkinter
import tkinter.messagebox
import re
import random
import docx
import os
import string
import math
import spacy
import pytextrank
import traceback
import unittest
import warnings
from rutermextract import TermExtractor

 

class Ui_MainWindow2(object):

    def Analiz3(self):
        self.listWidget_1.clear()
        textkluch = self.textEdit.toPlainText()
        textkluchsplit = textkluch.split()
        punctuation=re.sub(r'[^A-Za-z0-9а-яА-Я]+',' ',str(textkluchsplit))
        punctuation2=re.sub(r'\b\w{1,3}\b', ' ', punctuation) 
        c = list(punctuation2.lower().split())
        i=0

        ss = codecs.open('C:/Users/petuh/Desktop/Программа/Стоп-слова.txt', 'r', 'utf8')
        Text1 = ss.read()
        ss.close()
        splitslov1 = Text1.split()
        listslov1 = list(splitslov1)
        cc = []

        for i in c:    
            if not i in listslov1:  
                cc.append(i)   

        myString = ' '.join(cc)
        spisoksplit = myString
        slova = []


        term_extractor = TermExtractor()
        for term in term_extractor(spisoksplit):
            if term.count>4:
                slova.append(term.normalized)

        schet=-1
        
        dir = 'C:/Users/petuh/Desktop/Программа/Конференции'
        papki = os.listdir(dir)       
        kolvo=len(spisoksplit)
        kokstatob = 0

        for papka in papki:
            schet+=1 
            schet2=0
            kolvopapki=0
            dir2 = 'C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[schet])
            papki2 = os.listdir(dir2)
            kolvopapkishet = len(papki2)
            kolvostat = 0

            for papka2 in papki2:
                sovpalo=0
                os.chdir('C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[schet])+'/{}'.format(papki2[schet2]))
                listrrrrr = os.listdir()
                lennn = len(listrrrrr) - 1 
                schet2+=1 
                kokstatob += lennn


        kokproc = 0

        P = []
        A = []
        schet=0
        i=0
        dir = 'C:/Users/petuh/Desktop/Программа/Конференции'
        papki = os.listdir(dir)       

        for papka in papki:
            slova1 = []
            
            schet2=0
            dir2 = 'C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[schet])
            papki2 = os.listdir(dir2)
            kolvopapkishet = len(papki2)

            for papka2 in papki2:
                sovpalo=0.
                schet3=0
                Dwi = 0
                
                PA = 0
               
                os.chdir('C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[schet])+'/{}'.format(papki2[schet2]))
                listrrrrr = os.listdir()
                lennn = len(listrrrrr) - 1 
                kokproc = lennn/kokstatob

                for doxx in listrrrrr:
                    if doxx == "text.txt":
                        schet3+=1
                    else:
                        doc= docx.Document('C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[schet])+'/{}'.format(papki2[schet2])+'/{}'.format(listrrrrr[schet3]))
                        text1 = []
                        for paragraph in doc.paragraphs:
                            text1.append(paragraph.text)
                        Text2=' '.join(text1)
                        
                        splitslov2 = Text2.split()
                        punctuation5=re.sub(r'[^A-Za-z0-9а-яА-Я]+',' ',str(splitslov2))
                        punctuation6=re.sub(r'\b\w{1,3}\b', ' ', punctuation5) 
                        listslov1 = list(punctuation6.lower().split())
                        y = 0

                        sss = codecs.open('C:/Users/petuh/Desktop/Программа/Стоп-слова.txt', 'r', 'utf8')
                        Text11 = sss.read()
                        sss.close()
                        splitslov11 = Text11.split()
                        listslov11 = list(splitslov11)
                        ccc = []

                        for y in listslov1:    
                            if not y in listslov11:  
                                ccc.append(y) 

                        myString1 = ' '.join(ccc)
                        spisoksplit1 = myString1
                        

                        term_extractor1 = TermExtractor()
                        for term in term_extractor(spisoksplit1):
                            if term.count>4:
                                slova1.append(term.normalized)

                        for elementspisok in slova:
                            for elementext in slova1:
                                if elementspisok == elementext:
                                    sovpalo+=1


                        if sovpalo>2:
                            Dwi+=1

                        schet3+=1

                PA = str((Dwi/lennn)*kokproc)
                P.append(PA)
                A.append(PA)
                print (P)
                print (A)

                schet2+=1
            schet+=1 


        # inr=0
        # for tiiiiiii in P:

        #     os.chdir('C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[inr]))
        #     longj1 = os.listdir() 
        #     longj = len(longj1) - 1
        #     rer = 0 
        #     for j in A:
        #         if tiiiiiii >= j:
        #             if rer <= longj:
        #                 rer += 1
        #                 hghg = tiiiiiii
        #                 uu=P.index(hghg)
        #             else:
        #                 hghg = tiiiiiii
        #                 uu=P.index(hghg)
        #                 rer = 0
        #     inr+=1
        # index1 = uu - longj - rer
        # os.chdir('C:/Users/petuh/Desktop/Программа/Конференции')
        # longj12 = os.listdir()
        # index2 = len(longj12) - 1  
        # os.chdir('C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[index2])+'/{}'.format(papki2[index1]))
        # trty = os.listdir()
        # print(trty)

        hghg = 0
        hghg = (max(P))
        uu=P.index(hghg)
        gth = uu 
        print (gth)

        os.chdir('C:/Users/petuh/Desktop/Программа/Конференции')
        papki233 = os.listdir()
        schet5=0
        oiu = 0
        for tyu in papki233:
            if oiu >=0:
                dir3 = 'C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki233[schet5])
                papki244 = os.listdir(dir3)
                print(papki244)
                kolvopapkishet1 = len(papki244)
                oiu = gth - kolvopapkishet1
                print (oiu)
                if oiu >= kolvopapkishet1:
                    schet5+=1
                else:

                    dir4 = 'C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki233[schet5])+'/{}'.format(papki244[oiu])
                    dfgdfg = "Конференция: " + papki233[schet5] + " Направление: " + papki244[oiu]
                     

                schet5+=1
                gth = oiu
        self.listWidget_1.addItem(str(dfgdfg))

    def zagruzka(self):
        doc= docx.Document(easygui.fileopenbox(filetypes=["*.docx"]))
        text = []
        for paragraph in doc.paragraphs:
            text.append(paragraph.text)
        poisk=' '.join(text)
        self.textEdit.setText(poisk)

    def zagruzka2(self):
        doc= docx.Document(easygui.fileopenbox(filetypes=["*.docx"]))
        text = []
        for paragraph in doc.paragraphs:
            text.append(paragraph.text)
        poisk=' '.join(text)
        self.textEdit_2.setText(poisk)

    def poisklud(self):
        self.listWidget_3.clear()
        textkluch = self.comboBox_3.currentText()
        textkluchsplit = textkluch.split()
        punctuation11=re.sub(r'[^A-Za-z0-9а-яА-Я]+',' ',str(textkluchsplit))
        punctuation=re.sub(r'\b\w{1}\b', ' ', punctuation11) 
        c = list(punctuation.split())

        textkluch2 = self.comboBox.currentText()
        textkluchsplit2 = textkluch2.split()
        punctuation22=re.sub(r'[^A-Za-z0-9а-яА-Я]+',' ',str(textkluchsplit2))
        punctuation2=re.sub(r'\b\w{1}\b', ' ', punctuation22) 
        c2 = list(punctuation2.split())

        textkluch3 = self.lineEdit_4.text()
        textkluchsplit3 = textkluch3.split()
        punctuation33=re.sub(r'[^A-Za-z0-9а-яА-Я]+',' ',str(textkluchsplit3))
        punctuation3=re.sub(r'\b\w{1}\b', ' ', punctuation33) 
        c3 = list(punctuation3.split())

        textkluch4 = self.textEdit_3.toPlainText()
        textkluchsplit4 = textkluch4.split()
        punctuation44=re.sub(r'[^A-Za-z0-9а-яА-Я]+',' ',str(textkluchsplit4))
        punctuation4=re.sub(r'\b\w{1}\b', ' ', punctuation44) 
        c4 = list(punctuation4.split())

        rrr = c + c2 + c3 + c4

        self.textBrowser_6.setText(str(rrr))

        dir = 'C:/Users/petuh/Desktop/Программа/Участники'
        papki = os.listdir(dir)       
        dfg =[]
        schet=-1


        for papka in papki:
            schet+=1 
            sovpalo=0
            os.chdir('C:/Users/petuh/Desktop/Программа/Участники'+'/{}'.format(papki[schet]))
            f = open('C:/Users/petuh/Desktop/Программа/Участники'+'/{}'.format(papki[schet])+'/Данные.txt', 'r')
            Text=f.read()
            f.close()
            splitslov = Text.split()
            listslov = list(splitslov)
            print (rrr)
            print (listslov)
            self.textBrowser_7.append(str(listslov))

            for elementspisok in rrr:
                for elementext in listslov:
                    if elementext == elementspisok:
                        sovpalo+=1
                    print (sovpalo)

                       
            
            if sovpalo>0:
                dfgdfg = papki[schet]
                self.listWidget_3.addItem(str(dfgdfg))                        
        else:
            schet+=1 





    def poiskStat(self):
        self.listWidget_2.clear()
        textkluch = self.textEdit_2.toPlainText()
        textkluchsplit = textkluch.split()
        punctuation=re.sub(r'[^A-Za-z0-9а-яА-Я]+',' ',str(textkluchsplit))
        punctuation2=re.sub(r'\b\w{1,3}\b', ' ', punctuation) 
        c = list(punctuation2.lower().split())

        ss = codecs.open('C:/Users/petuh/Desktop/Программа/Стоп-слова.txt', 'r', 'utf8')
        Text1 = ss.read()
        ss.close()
        splitslov1 = Text1.split()
        listslov1 = list(splitslov1)
        cc = []
        slova = []

        for i in c:    
            if not i in listslov1:  
                cc.append(i)   
        print (cc)
        myString = ' '.join(cc)
        spisoksplit = myString

        term_extractor = TermExtractor()
        for term in term_extractor(spisoksplit):
            if term.count>4:
                slova.append(term.normalized)
        print (slova)

        self.textBrowser_4.setText(str(slova))


        schet=-1
        spisok=[]
        spisokproc=[]
        i=0

        dir = 'C:/Users/petuh/Desktop/Программа/Статьи'
        stati = os.listdir(dir)       
        dfg =[]

        for stat in stati:
            slova1 = []
            c3 = []
            schet+=1 
            sovpalo=0
            doc = docx.Document('C:/Users/petuh/Desktop/Программа/Статьи'+'/{}'.format(stati[schet]))
            text = []
            for paragraph in doc.paragraphs:
                text.append(paragraph.text)
            poisk=' '.join(text)
            splitslov = poisk.split()
            
            punctuation12=re.sub(r'[^A-Za-z0-9а-яА-Я]+',' ',str(splitslov))
            punctuation22=re.sub(r'\b\w{1,3}\b', ' ', punctuation12) 
            c2 = list(punctuation22.lower().split())

            for i in c2:    
                if not i in listslov1:  
                    c3.append(i)

            myString1 = ' '.join(c3)
            spisoksplit1 = myString1

            term_extractor1 = TermExtractor()
            for term1 in term_extractor1(spisoksplit1):
                if term1.count>4:
                    slova1.append(term1.normalized)

            self.textBrowser_5.append(str(slova1))


            for elemenslova in slova:
                for elementslova2 in slova1:
                    if elemenslova==elementslova2:
                        sovpalo+=1
                        print (sovpalo)
            if sovpalo > 0:

                dfgdfg = 'Статья: '+ stati[schet]
                self.listWidget_2.addItem(str(dfgdfg))

        


        




    def Analiz2(self):
        self.listWidget_1.clear()
        textkluch = self.textEdit.toPlainText()
        textkluchsplit = textkluch.split()
        punctuation=re.sub(r'[^A-Za-z0-9а-яА-Я]+',' ',str(textkluchsplit))
        punctuation2=re.sub(r'\b\w{1,3}\b', ' ', punctuation) 
        c = list(punctuation2.lower().split())

        ss = codecs.open('C:/Users/petuh/Desktop/Программа/Стоп-слова.txt', 'r', 'utf8')
        Text1 = ss.read()
        ss.close()
        splitslov1 = Text1.split()
        listslov1 = list(splitslov1)
        cc = []
        slova = []

        for i in c:    
            if not i in listslov1:  
                cc.append(i)   

        myString = ' '.join(cc)
        spisoksplit = myString

        term_extractor = TermExtractor()
        for term in term_extractor(spisoksplit):
            if term.count>4:
                slova.append(term.normalized)

        self.textBrowser_2.setText(str(slova))

        print (slova)

        schet=-1
        spisok=[]
        spisokproc=[]
        i=0

        dir = 'C:/Users/petuh/Desktop/Программа/Конференции'
        papki = os.listdir(dir)       
        kolvo=len(spisoksplit)
        dfg =[]

        for papka in papki:
            schet+=1 
            schet2=0
            kolvopapki=0
            dir2 = 'C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[schet])
            papki2 = os.listdir(dir2)
            kolvopapkishet = len(papki2)


            for papka2 in papki2:
                if kolvopapki<kolvopapkishet:
                    sovpalo=0
                    os.chdir('C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[schet])+'/{}'.format(papki2[schet2]))
                    f = codecs.open('C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[schet])+'/{}'.format(papki2[schet2])+'/text.txt', 'r', 'utf8')
                    Text=f.read()
                    f.close()
                    splitslov = Text.split()
                    listslov = list(splitslov)

                    self.textBrowser_3.append(str(listslov))

                    for elementspisok in slova:
                        fff = len(str(elementspisok).split())
                        tt = 0
                        yy = fff
                        print ("elementspisok     " + str(elementspisok))

                        for elementext in listslov:
                            elementext2 = listslov[tt:yy]
                            fgdfgh = " ".join(elementext2)
                            tt += fff
                            yy += fff
                            print ("fgdfgh     " + str(fgdfgh))


                            if fgdfgh == elementspisok:
                                sovpalo+=1
                            print (sovpalo)

                               
                    
                    if sovpalo>2:
                        dfgdfg = 'Коференция: '+papki[schet]+' '+'Направление: '+papki2[schet2]
                        self.listWidget_1.addItem(str(dfgdfg))                        
                    
                    schet2+=1 
                    kolvopapki+=1
                else:
                    schet+=1 
                    schet2=0
  




    def Analiz(self):
        self.listWidget_1.clear()
        textkluch = self.textEdit.toPlainText()
        textkluchsplit = textkluch.split()
        punctuation=re.sub(r'[^A-Za-z0-9а-яА-Я]+',' ',str(textkluchsplit))
        punctuation2=re.sub(r'\b\w{1,3}\b', ' ', punctuation) 
        c = list(punctuation2.lower().split())

        ss = codecs.open('C:/Users/petuh/Desktop/Программа/Стоп-слова.txt', 'r', 'utf8')
        Text1 = ss.read()
        ss.close()
        splitslov1 = Text1.split()
        listslov1 = list(splitslov1)
        cc = []

        for i in c:    
            if not i in listslov1:  
                cc.append(i)   

        spisoksplit = cc


        schet=-1
        spisok=[]
        spisokproc=[]
        i=0
        chislotext = 0
        chislosoder = 0

        dir = 'C:/Users/petuh/Desktop/Программа/Конференции'
        papki = os.listdir(dir)       
        kolvo=len(spisoksplit)


        for papka in papki:
            schet+=1 
            schet2=0
            kolvopapki=0
            dir2 = 'C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[schet])
            papki2 = os.listdir(dir2)
            kolvopapkishet = len(papki2)

            for papka2 in papki2:
                if kolvopapki<kolvopapkishet:
                    sovpalo=0
                    os.chdir('C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[schet])+'/{}'.format(papki2[schet2]))
                    f = codecs.open('C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[schet])+'/{}'.format(papki2[schet2])+'/text.txt', 'r', 'utf8')
                    Text=f.read()
                    f.close()
                    splitslov = Text.split()
                    listslov = list(splitslov)

                    for elementext in listslov:
                        for elementspisok in spisoksplit:
                            if re.findall(r"{}+\w".format(elementext),elementspisok):
                                sovpalo+=1
                                print (kolvo, sovpalo, os.getcwd(), kolvopapki)
                    
                    if sovpalo>0:
                        chislosoder +=1

                    schet2+=1 
                    kolvopapki+=1
                    chislotext+=1


                else:
                    schet+=1 
                    schet2=0

        schet=-1
        spisok=[]
        spisokproc=[]
        i=0

        dir = 'C:/Users/petuh/Desktop/Программа/Конференции'
        papki = os.listdir(dir)       
        kolvo=len(spisoksplit)

        for papka in papki:
            schet+=1 
            schet2=0
            kolvopapki=0
            dir2 = 'C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[schet])
            papki2 = os.listdir(dir2)
            kolvopapkishet = len(papki2)

            print ("kolvopapkishet1 ", kolvopapkishet)
            print ("schet22 ", schet2)
            print ("schet11 ", schet) 
            print (chislosoder)
            print (chislotext)

            for papka2 in papki2:
                if kolvopapki<kolvopapkishet:
                    sovpalo=0
                    os.chdir('C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[schet])+'/{}'.format(papki2[schet2]))
                    f = codecs.open('C:/Users/petuh/Desktop/Программа/Конференции'+'/{}'.format(papki[schet])+'/{}'.format(papki2[schet2])+'/text.txt', 'r', 'utf8')
                    Text=f.read()
                    f.close()
                    splitslov = Text.split()
                    listslov = list(splitslov)

                    for elementext in listslov:
                        for elementspisok in spisoksplit:
                            if re.findall(r"{}+\w".format(elementext),elementspisok):
                                sovpalo+=1
                                print (kolvo, sovpalo, os.getcwd(), kolvopapki)

                    TF= sovpalo/kolvo
                    IDF = math.log10(chislotext/chislosoder)
                    M = TF * IDF
                    
                    if sovpalo>0:
                        dfgdfg = 'Коференция: '+papki[schet]+' '+'Направление: '+papki2[schet2]+' Процент совпадения: '+str(M)
                        self.listWidget_1.addItem(str(dfgdfg))
                    
                    schet2+=1 
                    kolvopapki+=1

                    
                    print (M)
                    print (schet2)
                    print (kolvopapki)

                else:
                    schet+=1 
                    schet2=0

                    print ("schet2 ", schet2)
                    print ("schet ", schet) 
                    print ("kolvopapkishet2 ", kolvopapkishet)  



    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1660, 1222)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 10, 1701, 1171))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.label = QtWidgets.QLabel(self.tab)
        self.label.setGeometry(QtCore.QRect(30, 20, 47, 13))
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.tab)
        self.lineEdit.setGeometry(QtCore.QRect(30, 40, 341, 21))
        self.lineEdit.setObjectName("lineEdit")
        self.checkBox = QtWidgets.QCheckBox(self.tab)
        self.checkBox.setGeometry(QtCore.QRect(390, 40, 131, 21))
        self.checkBox.setObjectName("checkBox")
        self.pushButton = QtWidgets.QPushButton(self.tab)
        self.pushButton.setGeometry(QtCore.QRect(1110, 100, 211, 41))
        self.pushButton.setObjectName("pushButton")
        self.listWidget = QtWidgets.QListWidget(self.tab)
        self.listWidget.setGeometry(QtCore.QRect(30, 100, 1051, 951))
        self.listWidget.setObjectName("listWidget")
        dir = 'C:/Users/petuh/Desktop/Программа/Конференции'
        papki = os.listdir(dir) 
        kolvo=len(papki)
        i=0
        while (i < kolvo):
            self.listWidget.addItem(papki[i])
            i+=1



        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.textEdit = QtWidgets.QTextEdit(self.tab_2)
        self.textEdit.setGeometry(QtCore.QRect(150, 80, 1131, 271))
        self.textEdit.setObjectName("textEdit")
        self.pushButton_2 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_2.setGeometry(QtCore.QRect(550, 20, 301, 51))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.zagruzka)


        self.pushButton_4 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_4.setGeometry(QtCore.QRect(150, 430, 81, 51))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_4.clicked.connect(self.Analiz)


        self.pushButton_5 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_5.setGeometry(QtCore.QRect(390, 430, 81, 51))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_5.clicked.connect(self.Analiz3)

        self.pushButton_6 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_6.setGeometry(QtCore.QRect(270, 430, 81, 51))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_6.clicked.connect(self.Analiz2)



        self.label_27 = QtWidgets.QLabel(self.tab_2)
        self.label_27.setGeometry(QtCore.QRect(150, 410, 91, 16))
        self.label_27.setObjectName("label_27")
        self.label_28 = QtWidgets.QLabel(self.tab_2)
        self.label_28.setGeometry(QtCore.QRect(150, 520, 81, 16))
        self.label_28.setObjectName("label_28")
        self.label_30 = QtWidgets.QLabel(self.tab_2)
        self.label_30.setGeometry(QtCore.QRect(150, 60, 251, 16))
        self.label_30.setObjectName("label_30")
        self.groupBox_4 = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox_4.setGeometry(QtCore.QRect(630, 380, 651, 121))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.groupBox_4.setFont(font)
        self.groupBox_4.setMouseTracking(False)
        self.groupBox_4.setTabletTracking(False)
        self.groupBox_4.setObjectName("groupBox_4")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.groupBox_4)
        self.textBrowser_2.setGeometry(QtCore.QRect(10, 40, 301, 51))
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.groupBox_4)
        self.textBrowser_3.setGeometry(QtCore.QRect(330, 40, 301, 51))
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.listWidget_1 = QtWidgets.QListWidget(self.tab_2)
        self.listWidget_1.setGeometry(QtCore.QRect(150, 550, 1131, 531))
        self.listWidget_1.setObjectName("listWidget_2")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.textEdit_2 = QtWidgets.QTextEdit(self.tab_3)
        self.textEdit_2.setGeometry(QtCore.QRect(150, 80, 1131, 241))
        self.textEdit_2.setObjectName("textEdit_2")
        self.label_29 = QtWidgets.QLabel(self.tab_3)
        self.label_29.setGeometry(QtCore.QRect(150, 60, 251, 16))
        self.label_29.setObjectName("label_29")
        self.pushButton_7 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_7.setGeometry(QtCore.QRect(550, 20, 301, 51))
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_7.clicked.connect(self.zagruzka2)



        self.label_2 = QtWidgets.QLabel(self.tab_3)
        self.label_2.setGeometry(QtCore.QRect(150, 470, 111, 16))
        self.label_2.setObjectName("label_2")
        self.pushButton_8 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_8.setGeometry(QtCore.QRect(1320, 500, 261, 51))
        self.pushButton_8.setObjectName("pushButton_8")
        self.pushButton_10 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_10.setGeometry(QtCore.QRect(150, 390, 301, 51))
        self.pushButton_10.setObjectName("pushButton_10")
        self.pushButton_10.clicked.connect(self.poiskStat)



        self.groupBox_5 = QtWidgets.QGroupBox(self.tab_3)
        self.groupBox_5.setGeometry(QtCore.QRect(630, 340, 651, 121))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.groupBox_5.setFont(font)
        self.groupBox_5.setMouseTracking(False)
        self.groupBox_5.setTabletTracking(False)
        self.groupBox_5.setObjectName("groupBox_5")
        self.textBrowser_4 = QtWidgets.QTextBrowser(self.groupBox_5)
        self.textBrowser_4.setGeometry(QtCore.QRect(10, 40, 301, 51))
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.textBrowser_5 = QtWidgets.QTextBrowser(self.groupBox_5)
        self.textBrowser_5.setGeometry(QtCore.QRect(330, 40, 301, 51))
        self.textBrowser_5.setObjectName("textBrowser_5")
        self.listWidget_2 = QtWidgets.QListWidget(self.tab_3)
        self.listWidget_2.setGeometry(QtCore.QRect(150, 500, 1131, 591))
        self.listWidget_2.setObjectName("listWidget_3")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.textEdit_3 = QtWidgets.QTextEdit(self.tab_4)
        self.textEdit_3.setGeometry(QtCore.QRect(140, 100, 1131, 131))
        self.textEdit_3.setObjectName("textEdit_3")
        self.label_31 = QtWidgets.QLabel(self.tab_4)
        self.label_31.setGeometry(QtCore.QRect(140, 20, 171, 16))
        self.label_31.setObjectName("label_31")
        self.label_32 = QtWidgets.QLabel(self.tab_4)
        self.label_32.setGeometry(QtCore.QRect(140, 380, 131, 16))
        self.label_32.setObjectName("label_32")
        self.label_33 = QtWidgets.QLabel(self.tab_4)
        self.label_33.setGeometry(QtCore.QRect(540, 20, 171, 16))
        self.label_33.setObjectName("label_33")
        self.label_34 = QtWidgets.QLabel(self.tab_4)
        self.label_34.setGeometry(QtCore.QRect(950, 20, 121, 16))
        self.label_34.setObjectName("label_34")
        self.label_35 = QtWidgets.QLabel(self.tab_4)
        self.label_35.setGeometry(QtCore.QRect(140, 80, 131, 16))
        self.label_35.setObjectName("label_35")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_4.setGeometry(QtCore.QRect(950, 40, 321, 20))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.pushButton_12 = QtWidgets.QPushButton(self.tab_4)
        self.pushButton_12.setGeometry(QtCore.QRect(140, 280, 301, 51))
        self.pushButton_12.setObjectName("pushButton_12")
        self.pushButton_12.clicked.connect(self.poisklud)


        self.pushButton_13 = QtWidgets.QPushButton(self.tab_4)
        self.pushButton_13.setGeometry(QtCore.QRect(1310, 410, 261, 51))
        self.pushButton_13.setObjectName("pushButton_13")
        self.comboBox_3 = QtWidgets.QComboBox(self.tab_4)
        self.comboBox_3.setGeometry(QtCore.QRect(140, 40, 311, 22))
        self.comboBox_3.setObjectName("comboBox_3")
        self.comboBox_3.addItem("")
        self.comboBox_3.setItemText(0, "")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox_3.addItem("")
        self.comboBox = QtWidgets.QComboBox(self.tab_4)
        self.comboBox.setGeometry(QtCore.QRect(540, 40, 341, 22))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.setItemText(0, "")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.groupBox_6 = QtWidgets.QGroupBox(self.tab_4)
        self.groupBox_6.setGeometry(QtCore.QRect(620, 260, 651, 121))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.groupBox_6.setFont(font)
        self.groupBox_6.setMouseTracking(False)
        self.groupBox_6.setTabletTracking(False)
        self.groupBox_6.setObjectName("groupBox_6")
        self.textBrowser_6 = QtWidgets.QTextBrowser(self.groupBox_6)
        self.textBrowser_6.setGeometry(QtCore.QRect(10, 40, 301, 51))
        self.textBrowser_6.setObjectName("textBrowser_6")
        self.textBrowser_7 = QtWidgets.QTextBrowser(self.groupBox_6)
        self.textBrowser_7.setGeometry(QtCore.QRect(330, 40, 301, 51))
        self.textBrowser_7.setObjectName("textBrowser_7")
        self.listWidget_3 = QtWidgets.QListWidget(self.tab_4)
        self.listWidget_3.setGeometry(QtCore.QRect(140, 410, 1131, 681))
        self.listWidget_3.setObjectName("listWidget_4")
        self.tabWidget.addTab(self.tab_4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.groupBox = QtWidgets.QGroupBox(self.tab_5)
        self.groupBox.setGeometry(QtCore.QRect(70, 50, 771, 131))
        self.groupBox.setObjectName("groupBox")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(150, 30, 81, 16))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        self.label_4.setGeometry(QtCore.QRect(210, 50, 21, 16))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setGeometry(QtCore.QRect(200, 70, 31, 16))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        self.label_6.setGeometry(QtCore.QRect(20, 90, 221, 16))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.groupBox)
        self.label_7.setGeometry(QtCore.QRect(250, 30, 61, 16))
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.groupBox)
        self.label_8.setGeometry(QtCore.QRect(250, 50, 47, 13))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.groupBox)
        self.label_9.setGeometry(QtCore.QRect(250, 70, 141, 16))
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.groupBox)
        self.label_10.setGeometry(QtCore.QRect(250, 90, 91, 16))
        self.label_10.setObjectName("label_10")
        self.groupBox_2 = QtWidgets.QGroupBox(self.tab_5)
        self.groupBox_2.setGeometry(QtCore.QRect(70, 210, 771, 171))
        self.groupBox_2.setObjectName("groupBox_2")
        self.label_11 = QtWidgets.QLabel(self.groupBox_2)
        self.label_11.setGeometry(QtCore.QRect(60, 30, 71, 16))
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.groupBox_2)
        self.label_12.setGeometry(QtCore.QRect(50, 60, 81, 16))
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(self.groupBox_2)
        self.label_13.setGeometry(QtCore.QRect(280, 30, 91, 16))
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.groupBox_2)
        self.label_14.setGeometry(QtCore.QRect(290, 60, 81, 16))
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.groupBox_2)
        self.label_15.setGeometry(QtCore.QRect(20, 90, 111, 16))
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.groupBox_2)
        self.label_16.setGeometry(QtCore.QRect(150, 30, 71, 16))
        self.label_16.setObjectName("label_16")
        self.label_17 = QtWidgets.QLabel(self.groupBox_2)
        self.label_17.setGeometry(QtCore.QRect(150, 60, 71, 16))
        self.label_17.setObjectName("label_17")
        self.label_18 = QtWidgets.QLabel(self.groupBox_2)
        self.label_18.setGeometry(QtCore.QRect(420, 30, 71, 16))
        self.label_18.setObjectName("label_18")
        self.label_19 = QtWidgets.QLabel(self.groupBox_2)
        self.label_19.setGeometry(QtCore.QRect(420, 60, 71, 16))
        self.label_19.setObjectName("label_19")
        self.label_20 = QtWidgets.QLabel(self.groupBox_2)
        self.label_20.setGeometry(QtCore.QRect(150, 90, 71, 16))
        self.label_20.setObjectName("label_20")
        self.groupBox_3 = QtWidgets.QGroupBox(self.tab_5)
        self.groupBox_3.setGeometry(QtCore.QRect(70, 410, 371, 141))
        self.groupBox_3.setObjectName("groupBox_3")
        self.label_21 = QtWidgets.QLabel(self.groupBox_3)
        self.label_21.setGeometry(QtCore.QRect(20, 40, 121, 16))
        self.label_21.setObjectName("label_21")
        self.label_22 = QtWidgets.QLabel(self.groupBox_3)
        self.label_22.setGeometry(QtCore.QRect(20, 70, 61, 16))
        self.label_22.setObjectName("label_22")
        self.label_23 = QtWidgets.QLabel(self.groupBox_3)
        self.label_23.setGeometry(QtCore.QRect(20, 100, 91, 16))
        self.label_23.setObjectName("label_23")
        self.label_24 = QtWidgets.QLabel(self.groupBox_3)
        self.label_24.setGeometry(QtCore.QRect(160, 70, 71, 16))
        self.label_24.setObjectName("label_24")
        self.label_25 = QtWidgets.QLabel(self.groupBox_3)
        self.label_25.setGeometry(QtCore.QRect(160, 40, 71, 16))
        self.label_25.setObjectName("label_25")
        self.label_26 = QtWidgets.QLabel(self.groupBox_3)
        self.label_26.setGeometry(QtCore.QRect(160, 100, 71, 16))
        self.label_26.setObjectName("label_26")
        self.pushButton_3 = QtWidgets.QPushButton(self.tab_5)
        self.pushButton_3.setGeometry(QtCore.QRect(380, 580, 211, 51))
        self.pushButton_3.setObjectName("pushButton_3")
        self.tabWidget.addTab(self.tab_5, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1660, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Поиск"))
        self.checkBox.setText(_translate("MainWindow", "расширенный поиск"))
        self.pushButton.setText(_translate("MainWindow", "Подать заявку"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Конференции"))
        self.pushButton_2.setText(_translate("MainWindow", "Открыть статью"))
        self.pushButton_4.setText(_translate("MainWindow", "1"))
        self.pushButton_5.setText(_translate("MainWindow", "3"))
        self.pushButton_6.setText(_translate("MainWindow", "2"))
        self.label_27.setText(_translate("MainWindow", "Способ анализа"))
        self.label_28.setText(_translate("MainWindow", "Рекомендация"))
        self.label_30.setText(_translate("MainWindow", "Введите ключевые слова или откройте статью"))
        self.groupBox_4.setTitle(_translate("MainWindow", "Ключевые слова"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Рекомендация по конференции"))
        self.label_29.setText(_translate("MainWindow", "Введите ключевые слова или откройте статью"))
        self.pushButton_7.setText(_translate("MainWindow", "Открыть статью"))
        self.label_2.setText(_translate("MainWindow", "Аналогичные статьи"))
        self.pushButton_8.setText(_translate("MainWindow", "Скачать статью"))
        self.pushButton_10.setText(_translate("MainWindow", "Поиск"))
        self.groupBox_5.setTitle(_translate("MainWindow", "Ключевые слова"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Поиск аналогичных статей"))
        self.label_31.setText(_translate("MainWindow", "Основной код классификатора"))
        self.label_32.setText(_translate("MainWindow", "Рекомендованные люди"))
        self.label_33.setText(_translate("MainWindow", "Раздел ОКВЭД"))
        self.label_34.setText(_translate("MainWindow", "Введите должность"))
        self.label_35.setText(_translate("MainWindow", "Другие ключевые слова"))
        self.pushButton_12.setText(_translate("MainWindow", "Поиск"))
        self.pushButton_13.setText(_translate("MainWindow", "Открыть профиль"))
        self.comboBox_3.setItemText(1, _translate("MainWindow", "Математика"))
        self.comboBox_3.setItemText(2, _translate("MainWindow", "Механика"))
        self.comboBox_3.setItemText(3, _translate("MainWindow", "Физика"))
        self.comboBox_3.setItemText(4, _translate("MainWindow", "Астрономия"))
        self.comboBox_3.setItemText(5, _translate("MainWindow", "Химия"))
        self.comboBox_3.setItemText(6, _translate("MainWindow", "Биология"))
        self.comboBox_3.setItemText(7, _translate("MainWindow", "Науки о материалах"))
        self.comboBox_3.setItemText(8, _translate("MainWindow", "Науки о Земле"))
        self.comboBox_3.setItemText(9, _translate("MainWindow", "Естественнонаучные методы исследований в гуманитарных науках"))
        self.comboBox_3.setItemText(10, _translate("MainWindow", "Инфокоммуникационные технологии и вычислительные системы"))
        self.comboBox_3.setItemText(11, _translate("MainWindow", "Фундаментальные основы инженерных наук"))
        self.comboBox_3.setItemText(12, _translate("MainWindow", "История"))
        self.comboBox_3.setItemText(13, _translate("MainWindow", "Археология"))
        self.comboBox_3.setItemText(14, _translate("MainWindow", "Этнология"))
        self.comboBox_3.setItemText(15, _translate("MainWindow", "Антропология"))
        self.comboBox_3.setItemText(16, _translate("MainWindow", "Экономика"))
        self.comboBox_3.setItemText(17, _translate("MainWindow", "Философия"))
        self.comboBox_3.setItemText(18, _translate("MainWindow", "Политология"))
        self.comboBox_3.setItemText(19, _translate("MainWindow", "Социология"))
        self.comboBox_3.setItemText(20, _translate("MainWindow", "Правоведение"))
        self.comboBox_3.setItemText(21, _translate("MainWindow", "Социальная история науки и техники"))
        self.comboBox_3.setItemText(22, _translate("MainWindow", "Науковедение"))
        self.comboBox_3.setItemText(23, _translate("MainWindow", "Филология"))
        self.comboBox_3.setItemText(24, _translate("MainWindow", "Искуствоведение"))
        self.comboBox_3.setItemText(25, _translate("MainWindow", "Психология"))
        self.comboBox_3.setItemText(26, _translate("MainWindow", "Фундаментальные проблемы образования"))
        self.comboBox_3.setItemText(27, _translate("MainWindow", "Социальные проблемы здоровья и экологии человека"))
        self.comboBox_3.setItemText(28, _translate("MainWindow", "Глобальные проблемы"))
        self.comboBox_3.setItemText(29, _translate("MainWindow", "Международные отношения"))
        self.comboBox_3.setItemText(30, _translate("MainWindow", "Фундаментальные основы медицинских наук"))
        self.comboBox_3.setItemText(31, _translate("MainWindow", "Фундаментальные основы сельскохозяйственных наук"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Сельское, лесное хозяйство, охота, рыболовство и рыбоводство"))
        self.comboBox.setItemText(2, _translate("MainWindow", "Добыча полезных ископаемых"))
        self.comboBox.setItemText(3, _translate("MainWindow", "Обрабатывающие производства"))
        self.comboBox.setItemText(4, _translate("MainWindow", "Обеспечение электрической энергией, газом и паром; кондиционирование воздуха"))
        self.comboBox.setItemText(5, _translate("MainWindow", "Водоснабжение; водоотведение, организация сбора и утилизации отходов, деятельность по ликвидации загрязнений"))
        self.comboBox.setItemText(6, _translate("MainWindow", "Строительство"))
        self.comboBox.setItemText(7, _translate("MainWindow", "Торговля оптовая и розничная; ремонт автотранспортных средств и мотоциклов"))
        self.comboBox.setItemText(8, _translate("MainWindow", "Транспортировка и хранение"))
        self.comboBox.setItemText(9, _translate("MainWindow", "Деятельность гостиниц и предприятий общественного питания"))
        self.comboBox.setItemText(10, _translate("MainWindow", "Деятельность в области информации и связи"))
        self.comboBox.setItemText(11, _translate("MainWindow", "Деятельность финансовая и страховая"))
        self.comboBox.setItemText(12, _translate("MainWindow", "Деятельность по операциям с недвижимым имуществом"))
        self.comboBox.setItemText(13, _translate("MainWindow", "Деятельность профессиональная, научная и техническая"))
        self.comboBox.setItemText(14, _translate("MainWindow", "Деятельность административная и сопутствующие дополнительные услуги"))
        self.comboBox.setItemText(15, _translate("MainWindow", "Государственное управление и обеспечение военной безопасности; социальное обеспечение"))
        self.comboBox.setItemText(16, _translate("MainWindow", "Образование"))
        self.comboBox.setItemText(17, _translate("MainWindow", "Деятельность в области здравоохранения и социальных услуг"))
        self.comboBox.setItemText(18, _translate("MainWindow", "Деятельность в области культуры, спорта, организации досуга и развлечений"))
        self.comboBox.setItemText(19, _translate("MainWindow", "Предоставление прочих видов услуг"))
        self.comboBox.setItemText(20, _translate("MainWindow", "Деятельность домашних хозяйств как работодателей; недифференцированная деятельность частных домашних хозяйств по производству товаров"))
        self.comboBox.setItemText(21, _translate("MainWindow", "Деятельность экстерриториальных организаций и органов"))
        self.groupBox_6.setTitle(_translate("MainWindow", "Ключевые слова"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "Поиск людей"))
        self.groupBox.setTitle(_translate("MainWindow", "Петухов Даниил Алексеевич"))
        self.label_3.setText(_translate("MainWindow", "Дата рождения"))
        self.label_4.setText(_translate("MainWindow", "Пол"))
        self.label_5.setText(_translate("MainWindow", "E-mail    E-mail    "))
        self.label_6.setText(_translate("MainWindow", "Мобильный телефон для смс-оповещения"))
        self.label_7.setText(_translate("MainWindow", "20.12.1999"))
        self.label_8.setText(_translate("MainWindow", "Мужской"))
        self.label_9.setText(_translate("MainWindow", "petuhov.dania1@yandex.ru"))
        self.label_10.setText(_translate("MainWindow", "89538116256"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Область научных интересов и научные достижения"))
        self.label_11.setText(_translate("MainWindow", "Образование"))
        self.label_12.setText(_translate("MainWindow", "Область знания    "))
        self.label_13.setText(_translate("MainWindow", "Ученая степень    l"))
        self.label_14.setText(_translate("MainWindow", "Ученое звание"))
        self.label_15.setText(_translate("MainWindow", "Научные достижения"))
        self.label_16.setText(_translate("MainWindow", "не заполнено"))
        self.label_17.setText(_translate("MainWindow", "не заполнено"))
        self.label_18.setText(_translate("MainWindow", "не заполнено"))
        self.label_19.setText(_translate("MainWindow", "не заполнено"))
        self.label_20.setText(_translate("MainWindow", "не заполнено"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Место работы"))
        self.label_21.setText(_translate("MainWindow", "Название предприятия    "))
        self.label_22.setText(_translate("MainWindow", "Должность"))
        self.label_23.setText(_translate("MainWindow", "Рабочий телефон    "))
        self.label_24.setText(_translate("MainWindow", "не заполнено"))
        self.label_25.setText(_translate("MainWindow", "не заполнено"))
        self.label_26.setText(_translate("MainWindow", "не заполнено"))
        self.pushButton_3.setText(_translate("MainWindow", "Изменить"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_5), _translate("MainWindow", "Анкетные данные"))



        os.chdir(r"C:/Users/petuh/Desktop/Программа")
        f=open('vremennayahuynya.txt','r')
        text=f.read()
        f.close()
        textsplit=text.split()
        print(textsplit)

        os.chdir(r"C:/Users/petuh/Desktop/Программа/Участники")
        dirlist=os.listdir()
        schet=-1
        a=0
        for papki in dirlist:
            schet+=1
            os.chdir(r"C:/Users/petuh/Desktop/Программа/Участники"+'/{}'.format(dirlist[schet]))
            ff=open('Данные.txt','r')
            fio=ff.read()
            fiosplit=fio.split()
            ff.close()
            print(fiosplit)
            for listvsya in textsplit:
                for loginsplit in fiosplit:
                    if listvsya==loginsplit:
                        a+=1


            if a==2:
                # os.remove('C:/Users/petuh/Desktop/Программа/vremennayahuynya.txt')
                os.chdir(r"C:/Users/petuh/Desktop/Программа/Участники"+'/{}'.format(dirlist[schet]))
                fio=open('Данные.txt','r')
                text32=fio.read()
                fio.close()
                textsplit111=text32.split()
                print(textsplit111)

                # self.groupBox.setTitle(_translate("MainWindow", '{}'.format(dirlist[schet])))
                # self.label_9.setText(_translate("MainWindow", '{}'.format(textsplit111[6])))
                # self.label_10.setText(_translate("MainWindow", '{}'.format(textsplit111[8])))
                # self.label_16.setText(_translate("MainWindow", '{}'.format(textsplit222[9])))
                # self.label_17.setText(_translate("MainWindow", '{}'.format(textsplit222[1])))
                # self.label_20.setText(_translate("MainWindow", '{}'.format(textsplit222[2])))
                # self.label_19.setText(_translate("MainWindow", '{}'.format(textsplit222[3])))
                # self.label_18.setText(_translate("MainWindow", '{}'.format(textsplit222[4]) +' наук'))
                # self.label_25.setText(_translate("MainWindow", '{}'.format(textsplit333[0])))
                # self.label_24.setText(_translate("MainWindow", '{}'.format(textsplit333[1])))
                # self.label_26.setText(_translate("MainWindow", '{}'.format(textsplit333[2])))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow2()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
